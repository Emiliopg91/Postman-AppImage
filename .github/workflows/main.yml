name: Package & release Postman AppImage

on:
  schedule:
    - cron: "0 0 * * *"  # Se ejecuta a las 12:00 AM UTC cada día
  workflow_dispatch:     # Permite la ejecución manual del workflow

permissions:
  contents: write  # Permitir escritura en el repositorio (incluyendo tags)

jobs:
  download-binary-app:
    name: Download app binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download latest binaries
        run: |
          wget -O binaries.tar.gz "https://dl.pstmn.io/download/latest/linux_64"
      
      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-binaries
          path: binaries.tar.gz

  generate-appimage:
    name: Generate AppImage
    runs-on: ubuntu-latest
    needs: download-binary-app
    outputs:
      version: ${{ steps.get_version.outputs.version }}  # Definir la salida de la versión
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq libfuse2
          pip install --upgrade certifi
          wget -O createAppImage.py "https://raw.githubusercontent.com/Emiliopg91/AppImage-Creator/main/createAppImage.py"

      - name: Download binaries from previous job
        uses: actions/download-artifact@v4
        with:
          name: app-binaries
          path: .

      - name: Unpack binaries
        run: |
          tar -xzvf ./binaries.tar.gz

      - name: Get version from package.json
        id: get_version
        run: |
          version=$(cat ./Postman/app/resources/app/package.json | jq -r  .version)
          echo "version=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"  # Definir la salida

      - name: Generate AppImage
        run: |
          python3 ./createAppImage.py \
            --entrypoint=./Postman/app/postman \
            --name="Postman" \
            --version=${{ env.version }} \
            --icon=./Postman/app/resources/app/assets/icon.png \
            --description="Supercharge your API workflow." \
            --desktop="./postman.desktop"
          echo "::set-output name=is_update::${{ env.IS_UPDATE }}"
        
      - name: Upload AppImage and zsync files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: appimage-files
          path: |
            ${{ env.APPIMAGE_PATH }}
            ${{ env.APPIMAGE_PATH }}.zsync

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: generate-appimage
    steps:
      - name: Download tar.gz, AppImage, and AppImage.zsync
        uses: actions/download-artifact@v4
        with:
          name: app-binaries
          path: .
          
      - name: Download AppImage and zsync files
        uses: actions/download-artifact@v4
        with:
          name: appimage-files
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "${{ needs.generate-appimage.outputs.version }}"
          automatic_release_tag: latest
          prerelease: false
          files: |
            ./*
          repo_token: ${{ secrets.GITHUB_TOKEN }}
